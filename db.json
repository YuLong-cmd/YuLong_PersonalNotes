{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/img/2.jpg","path":"img/2.jpg","modified":0,"renderable":0},{"_id":"source/img/hk.jpeg","path":"img/hk.jpeg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/ES6-ES11笔记.md","hash":"cf92ae2846bd0415956f5e59c1073f238bdf948c","modified":1688462811141},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"source/categories/index.md","hash":"7bdf9152b792775d775eaf513ba7e693d64f173d","modified":1687507319534},{"_id":"source/link/index.md","hash":"a44390c59cd6c39d49b2a22affaaa1ddfadd3f52","modified":1687507563364},{"_id":"source/tags/index.md","hash":"2002be73942907c0dff9f1c6bc9eb97436cd625d","modified":1687507190784},{"_id":"source/img/2.jpg","hash":"0cdce65960fc3123dc64e48ba409e6262550fa46","modified":1589603253684},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1687499165571},{"_id":"themes/butterfly/README_CN.md","hash":"f6ae7f38d016135340fd25c5fd1be65452b6773d","modified":1687499165573},{"_id":"themes/butterfly/README.md","hash":"5ca893c78f8971f512da55c785b8ccbfa9d37cfc","modified":1687499165572},{"_id":"themes/butterfly/_config.yml","hash":"8651da606af36cbec7a93f5f490ec3ef4b88a995","modified":1688650113894},{"_id":"themes/butterfly/package.json","hash":"a6a032654a36408d7b7274bc9cfe21f89946d29c","modified":1687499165777},{"_id":"themes/butterfly/plugins.yml","hash":"6d68dab3b79accb1bceb4710c8aaab724a45053a","modified":1687499165778},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1687499165577},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1687499165578},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1687499165579},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1687499165580},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1687499165583},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1687499165585},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1687499165772},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1687499165773},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1687499165774},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1687499165776},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1687499165570},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1687499165569},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1687499165563},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1687499165566},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1687499165564},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1687499165587},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1687499165589},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"601c29cb7f1dbdeab4b7f73402bef32e0dc0b8cc","modified":1687528898723},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"b50b0afdc41c54279587410c3f82c8cb3c5ff46d","modified":1687499165590},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1687499165612},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1687499165645},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1687499165650},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"c55f05400eb27ab051f47396ec8d4249ce6f71ec","modified":1687499165649},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1687499165780},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1687499165781},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1687499165783},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1687499165785},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1687499165786},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1687499165787},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1687499165923},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1687499165925},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1687499165789},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1687499165790},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1687499165792},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1687499165796},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1687499165794},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1687499165807},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1687499165798},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1687499165800},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1687499165803},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1687499165808},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1687499165842},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1687499165813},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1687499165814},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1687499165843},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1687499165845},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1687499165846},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1687499165847},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1687499165848},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1687499165852},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1687499165927},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1687499165928},{"_id":"themes/butterfly/source/js/main.js","hash":"4fd1cd7a02dedcb686caf6149c35fd8e1fbcafc9","modified":1687499165932},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1687499165930},{"_id":"themes/butterfly/source/js/utils.js","hash":"13b2b02118a0f4ec2e9e0bb1b90f5b1a30a70f44","modified":1687499165938},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"a102a6cacf7b20183946a54580867a964f3674c4","modified":1687499165937},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1687499165592},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1687499165594},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f5207840c96df6b26ad227433babca4f8c362624","modified":1687499165595},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1687499165596},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1687499165597},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1687499165598},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1687499165601},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1687499165603},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1687499165604},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1687499165606},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1687499165607},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1687499165608},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1687499165637},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1687499165609},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1687499165610},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"3adb731465a4ab14529277fd7867889e0800ad16","modified":1687499165638},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1687499165641},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1687499165613},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1687499165636},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1687499165614},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1687499165642},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1687499165643},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1687499165644},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1687499165647},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1687499165648},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1687499165758},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1687499165759},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1687499165760},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1687499165760},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1687499165761},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1687499165762},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1687499165764},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1687499165763},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1687499165766},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1687499165767},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1687499165770},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1687499165768},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1687499165771},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1687499165657},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1687499165727},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1687499165742},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"82bb447a5d045980789cf3f9de9d49cc32011b13","modified":1687499165743},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1687499165744},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1687499165756},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"431b4a252443e224872bd6b4f6aa76ed1679a82c","modified":1687499165856},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"9893656128c347d1c09c90784627c84c979b326f","modified":1687499165857},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"e43017dbc73e0ce95dcfcb9dfb4fcce0c1715dd4","modified":1687499165859},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1687499165870},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1687499165873},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1687499165874},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1687499165876},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1687499165875},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"20303c0dad28e5c5335ce2fa6582f1fafae5b628","modified":1687499165878},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1687499165879},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1687499165883},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"fc029f5e00d7904c0878efd20dd4e09fc55e1d03","modified":1687499165882},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1687499165880},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1687499165885},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"9066a62e442affce3a923a06a90486bf9d364e0e","modified":1687499165891},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1687499165887},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1687499165888},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1687499165889},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"4c86c10f8ec0c8fb60b400a5a2f14699d3155be4","modified":1687499165892},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1687499165895},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1687499165896},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1687499165898},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1687499165898},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1687499165900},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"57d333ef47bfb8fd22da31f600527c9d91e8e322","modified":1687499165902},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1687499165904},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1687499165906},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1687499165910},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1687499165907},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1687499165908},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1687499165911},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1687499165912},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1687499165913},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1687499165914},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1687499165914},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1687499165917},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1687499165935},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1687499165923},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"40e76d6da538cb3c1ef6b79ffc0adfa64fe6b8ba","modified":1687499165936},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1687499165919},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1687499165920},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1687499165655},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1687499165656},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1687499165671},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1687499165672},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1687499165674},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1687499165675},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1687499165675},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1687499165677},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"19b5cfa1f77781246e02967cefe149f19170e45f","modified":1687499165659},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1687499165660},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1687499165662},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1687499165662},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1687499165663},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1687499165665},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1687499165667},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"c42bbce31fcd8846cf3360f4c383dec9368daeba","modified":1687499165669},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b19b123df682b23491b17dcca386d79062cd8f6e","modified":1687499165709},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"b47698e153c73cb29286b19bec5ddd920cb7ffba","modified":1687499165695},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f8b73bc63ec1b45d86aa3891d8c81ef4d5980943","modified":1687499165706},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"1a20b11fa0e6b1943e9b4d81e197a25ca36af66d","modified":1687499165711},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a56edeb1ce2f1b1fb0e866a30543f274b9f7d69e","modified":1687499165713},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"c5e131d65a7ad30f3cb98ac3b94cd2f6a94c22e9","modified":1687499165718},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"7c7fbe27d82becc9ee509765f1195c69f5864a0b","modified":1687499165717},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1687499165719},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f618457d62ef35d78a31e7fb1e375a462f64b228","modified":1687499165722},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1687499165721},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4bb4cf58e219dfb8787273c931b1ea978b2ab88f","modified":1687499165722},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"386a2b371644c2682560733617561ba6e6bf9ab2","modified":1687499165723},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1687499165725},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"6b0d28671afd5ed286a714f25ba16256a2e7d880","modified":1687499165726},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1687499165729},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1687499165730},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1687499165730},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"da94966a9650ef3e4c69f3ee93758b30fa42cb78","modified":1687499165731},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"cfcfaed3a52fa47fff4cc65a053a2f025fb3b7b6","modified":1687499165734},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"a6be932d1f64c6190f5d03b5b77fba09fa0fd6b8","modified":1687499165735},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"4f8bd22c5c32d5430cbe08ab4e861b6f8b86f820","modified":1687499165735},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1687499165737},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"4fb998a05e51ef2302775945883307ee3039a544","modified":1687499165737},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1687499165747},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"edd4ebf76a79fb74cfae03a286fab90f74324dbd","modified":1687499165739},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ce4ab79c85df9f77395269eb01e9a023d7f96376","modified":1687499165739},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"2f3af113713563e34b10bbe998cc15008f81c85a","modified":1687499165741},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1687499165747},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1687499165752},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1687499165748},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1687499165750},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1687499165753},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1687499165754},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1687499165755},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1687499165862},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1687499165863},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1687499165865},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1687499165867},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1687499165869},{"_id":"public/search.xml","hash":"4ac12c474bef39c519918d67a7ce99fb5f08fadd","modified":1688657526210},{"_id":"public/link/index.html","hash":"9a03c0b5a05e5442a9de19b27ac31ea08f7b1eef","modified":1688657526210},{"_id":"public/tags/index.html","hash":"10fc4b1fd11d5cd8a7e5cdf9dc59ea443b074863","modified":1688657526210},{"_id":"public/categories/index.html","hash":"4c22359a18007cbb0c400a50e9c6e2e3e275f5a1","modified":1688657526210},{"_id":"public/2023/06/23/ES6-ES11笔记/index.html","hash":"031d272db55c4e74daff2242a74fb23554a4f32d","modified":1687517456310},{"_id":"public/2023/06/17/hello-world/index.html","hash":"6f7acde9e1cfcc8d7a6a1659a99709be9b707c2c","modified":1687517456310},{"_id":"public/archives/index.html","hash":"071daf444caddc4d3daa476c4f6cf7329ff76dfa","modified":1688657526210},{"_id":"public/archives/2023/index.html","hash":"ef1dbb03442a36bfab1d0aac945abe7cfb3ef8f2","modified":1688657526210},{"_id":"public/archives/2023/06/index.html","hash":"2b3df67386ab91f3f5301ae1f3854365fdb95e5a","modified":1687517456310},{"_id":"public/index.html","hash":"970002dea3614c56c8d48b8b8eaea33e7b88f3e3","modified":1688657526210},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1687517456310},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1687517456310},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1687517456310},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1687517456310},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1687517456310},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1687517456310},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1687517456310},{"_id":"public/css/index.css","hash":"c19c94d4ace891817988c9946d8d8c1117ad644a","modified":1687517456310},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1687517456310},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1687517456310},{"_id":"public/img/2.jpg","hash":"0cdce65960fc3123dc64e48ba409e6262550fa46","modified":1687517456310},{"_id":"source/_posts/ES6-ES11/0_html模版.html","hash":"cfa96ab33f81db30fd3440927b550151cfd746d5","modified":1686064419747},{"_id":"source/_posts/javascript/aa.md","hash":"07b0d1014ada74b91d7e571fccaca721c0310ca5","modified":1687076729115},{"_id":"source/_posts/ES6-ES11/10_扩展运算符的认识和应用.html","hash":"acd72ce48059802a784040b39b350bd4c04a3cb0","modified":1686583900091},{"_id":"source/_posts/ES6-ES11/11_Symbol的认识与创建.html","hash":"5f12af622df1c4c53abf39f7528aae6e22bcafe8","modified":1686585097112},{"_id":"source/_posts/ES6-ES11/13_Symbol内置属性.html","hash":"5554c16d4828105edcc2b821e60437a514eba9d1","modified":1686754360694},{"_id":"source/_posts/ES6-ES11/12_Symbol创建对象属性.html","hash":"e41229c657e7b05497b0b8c2d7298e37eada2608","modified":1686753303614},{"_id":"source/_posts/ES6-ES11/1_let_学习.html","hash":"4c736e42af23c985b30db4fa673c9af9b0e83552","modified":1685540363983},{"_id":"source/_posts/ES6-ES11/2_const_学习.html","hash":"68e7343849d53bd18cac48455aeb567bcab0c647","modified":1685542513531},{"_id":"source/_posts/ES6-ES11/3_变量的解构赋值.html","hash":"8004f5cfdeed7218e05592a9ad54c29fadf7a957","modified":1686150530765},{"_id":"source/_posts/ES6-ES11/4_模版字符串.html","hash":"ff756bf2621fad00225e5902cfa55ae2c3ac595a","modified":1686150812701},{"_id":"source/_posts/ES6-ES11/5_简化对象写法.html","hash":"64975f9caa39104e0e280e504ca1b0e0b14d0d89","modified":1686064880176},{"_id":"source/_posts/ES6-ES11/6_箭头函数.html","hash":"52345648984ab0c793638481d87169006da5d812","modified":1686239520497},{"_id":"source/_posts/ES6-ES11/7_箭头函数的案例.html","hash":"99ef05f3b2ee966fc3b3a444a161c02473ec18d5","modified":1686324389134},{"_id":"source/_posts/ES6-ES11/8_参数默认值.html","hash":"f7f8586a5fc3fd3640eb04787b013bec7c15826a","modified":1686495461910},{"_id":"source/_posts/ES6-ES11/9_rest.html","hash":"1933ec475551d2bdb73d7db023b49459c18a62bd","modified":1686496517498},{"_id":"source/_posts/ES6-ES11/ES6-11基础知识点.emmx","hash":"5caec5daf15db096bf65169df90b06f391ab5b78","modified":1685979442931},{"_id":"source/_posts/ES6-ES11/ES6-ES11笔记.md","hash":"07b0d1014ada74b91d7e571fccaca721c0310ca5","modified":1687076729115},{"_id":"source/_posts/常用.md","hash":"d3c51435528cccbd9586208ce31b900ae9e03849","modified":1688656525781},{"_id":"source/_posts/vue-router.md","hash":"b8993dae8f8f030eb8ab21b37379efce79789f58","modified":1688462259183},{"_id":"source/img/hk.jpeg","hash":"3df7ffbb779704a1b23b2d636718147d24919b8a","modified":1575784804000},{"_id":"source/_posts/图床.md","hash":"5b57351a4164f4eb6a7909762f80fe1b8268da1a","modified":1688480092411},{"_id":"source/about/index.md","hash":"83a6104e28b42582e6060c4db4a2f546e7a9ea0a","modified":1688656602631},{"_id":"public/about/index.html","hash":"6d37f038194d2413dd2a9bf68714760996668a17","modified":1688657526210},{"_id":"public/2023/07/04/常用/index.html","hash":"a081840b8188ec4eb145fdcb7e9b062562c0d0f7","modified":1688657526210},{"_id":"public/2023/07/04/图床/index.html","hash":"c93241de8e7b0a7ca271c1e201ce74e456902810","modified":1688657526210},{"_id":"public/2023/07/04/ES6-ES11笔记/index.html","hash":"d8d499caa08750552403987f2a1f3e5a91d3412c","modified":1688657526210},{"_id":"public/archives/2023/07/index.html","hash":"36beb2b6d46be6767f2f53151e43b87ae6754a50","modified":1688657526210},{"_id":"public/categories/JS/index.html","hash":"833ecdbdc38408428f73600f93c552c14f84122c","modified":1688657526210},{"_id":"public/categories/GitHub/index.html","hash":"1e5772524b543ab59176ba9f29a97c1c6a534c49","modified":1688657526210},{"_id":"public/tags/JS-ES6/index.html","hash":"0df65b4f2643e25bdf44c4f4afbe8cb4ce8c6c60","modified":1688657526210},{"_id":"public/tags/GitHub/index.html","hash":"c198bb802571d3452d7eafa9b66e5c97b71dbf99","modified":1688657526210},{"_id":"public/img/hk.jpeg","hash":"3df7ffbb779704a1b23b2d636718147d24919b8a","modified":1688657526210}],"Category":[{"name":"vue","_id":"cljo10o5m0001cki09k1d91cr"},{"name":"JS","_id":"cljo4wl6600005wi051x72ota"},{"name":"GitHub","_id":"cljodg8kt0001pwi0gv6qbfny"}],"Data":[],"Page":[{"title":"link","date":"2023-06-23T08:05:43.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: link\ndate: 2023-06-23 16:05:43\ntype: \"link\"\n---\n","updated":"2023-06-23T08:06:03.364Z","path":"link/index.html","comments":1,"layout":"page","_id":"clj8frvoa0000ioi01431do9x","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"分类页","date":"2023-06-23T08:00:06.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类页\ndate: 2023-06-23 16:00:06\ntype: \"categories\"\n---\n","updated":"2023-06-23T08:01:59.534Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clj8frvog0002ioi05wv3g664","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"标签","date":"2023-06-23T07:57:38.000Z","type":"tags","orderby":"random","order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2023-06-23 15:57:38\ntype: \"tags\"\norderby: random\norder: 1\n---\n","updated":"2023-06-23T07:59:50.784Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clj8frvoj0004ioi04n212uns","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""},{"title":"关于","date":"2023-06-23T08:00:06.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2023-06-23 16:00:06\ntype: \"about\"\n---\n","updated":"2023-07-06T15:16:42.631Z","path":"about/index.html","comments":1,"layout":"page","_id":"cljrajs2h00006ki0e42me8ey","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"ES6-ES11笔记","date":"2023-07-04T09:25:00.000Z","updated":"2023-07-04T09:25:00.000Z","keywords":"ES6","description":"ES6 学习笔记","cover":false,"_content":"\n### 1.let\n1、变量不能重<font color=\"#2DC26B\">复声明  </font>\n\n2、块级<font color=\"#2DC26B\">作用域  </font>\n\n3、<font color=\"#2DC26B\">不存在变量提升</font>  \n\n4、不影响作用域链\n\n![[1_let_学习.html]]\n### 2.const\n1、一定要赋初始值\n2、一般常量使用大写\n3、常量的值不能修改\n4、块级作用域\n5、对于数组和对象的元素修改，不算做对常量的修改\n\n![[2_const_学习.html]]\n### 3.变量的解构赋值\n1、数组的解构赋值\n\n```js\n const cA=['a','b','c'];\n      let [d,f,z]=A;\n      console.log(d);\n      console.log(f);\n      console.log(z);\n```\n\n2、对象的解构赋值\n```js\n   const a = {\n          name: \"zhangsan\",\n          age: 66,\n          xxx: function () {\n            console.log(\"55656\");\n          },\n        };\n        let {name,age,xxx}=a;\n        console.log(name);\n        console.log(age);\n        console.log(xxx);\n        xxx();\n```\n\n![[3_变量的解构赋值.html]]\n### 4.模板字符串\n1、声明\n```JS\nlet str = `我是模版字符串`;\nconsole.log(str,typeof str);\n```\n2、内容中可以直接出现换行符\n```JS\nlet str = `\n        <ul>\n            <li>111<li>\n            <li>222<li>\n            <li>333<li>    \n        <ul>\n        `;\n```\n3、变量的拼接\n```JS\nlet lovt = \"aaa\";\nlet out = `${lovt} 666666666666666`;\nconsole.log(out);\n```\n\n![[4_模版字符串.html]]\n### 5.简化对象写法\n```JS\nlet name ='光锥';\n        let chang = function() {\n            console.log('光锥之内皆是命运');\n        }\n\n        const school ={\n            name,\n            chang,\n            impove(){\n                console.log('超越光锥才能超越命运');\n            }\n        }\n```\n\n![[5_简化对象写法.html]]\n### 6.箭头函数\n1.this 是静态的  this 始终指向函数声明是所在的作用域下的this的值\n2.不能作为构造实例化对象\n3.不能使用 arguments 变量\n4.箭头函数的简写\n1) 省略小括号，当形参有且只有一个的时候\n2) 省略花括号，当代码体只有一条语句的时候，此时 return 必须省略 而且语句执行结果就是函数的返回值\n![[6_箭头函数.html]]\n5.练习\n![[7_箭头函数的案例.html]]\n\n### 7.参数默认值\n1.形参初始值 具有默认值的参数，一般位置要靠后(潜规则)\n\n\n``` JS\n      function add(a, b, c = 123) {\n        return a + b + c;\n      }\n      console.log(add(1, 2));\n\n```\n  2.与解构赋值结合\n\n```JS\nfunction connrct({host='127.0.0.1',username,password,port}){\n        console.log(host);\n        console.log(username);\n        console.log(password);\n        console.log(port);\n    }\n    connrct({\n        // host:\"百度.com\",\n        username:\"root\",\n        password:\"root\",\n        port:8080\n    });\n```\n\n### 8.rest参数\n1.ES5 获取实参的方式    对象形式\n\n```JS\n function date(){\n            console.log(arguments);\n        }\n        date('a','b','c','d');\n```\n![[Pasted image 20230611231727.png]]\n\n2.rest 参数必须要放到参数最后\n\n```JS\nfunction fn(a,b,...args){\n            console.log(a);\n            console.log(b);\n            console.log(args);\n        }\n        fn(1,2,3,45,6,69,6,88);\n```\n![[Pasted image 20230611231830.png]]\n\n### 9.扩展运算符的认识和应用\n1.认识 扩展运算符     ES6 【...】 扩展运算符 能将【数组】转换为逗号分隔的【参数序列】\n\n```JS\n// 声明一个数组\n      const arr = [\"A\", \"C\", \"B\"]; //【数组】\n      // => 'A','C','B'   【参数序列】\n\n      // 声明一个函数\n      function chang() {\n        console.log(arguments);\n      }\n      chang(...arr); //chang('A','C','B')   【参数序列】\n      chang(arr);\n```\n2.扩展运算符的应用\n 1).数组的合并\n \n```JS\n const AArr = [\"A\", \"C\", \"B\"];\n      const BArr = [\"D\", \"E\", \"F\"];\n      const CArr = AArr.concat(AArr);\n      console.log(CArr);\n      const DArr = [...AArr, ...BArr];\n      console.log(DArr);\n```\n2).数组的克隆   浅克隆\n\n```JS\nconst KArr = [\"H\", \"Y\", \"Z\"];\n      const YArr = [...KArr];\n      console.log(YArr);\n```\n\n3).将伪类数组转换为真正的数组\n\n```JS\n    <div></div>\n    <div></div>\n    <div></div>\n\nconst divs=document.querySelectorAll('div');\n      console.log(divs);\n      const divArr = [...divs];\n      console.log(divArr);\n```\n\n\n\n### 10.Symbol的认识与创建\n1.创建Symobl\n\n```JS\n      let s = Symbol();\n      console.log(s);\n      let s1 = Symbol(\"光锥\");\n      let s2 = Symbol(\"光锥\");\n      console.log(s1, s2, s1 == s4);\n```\n\n2  Symbol.for 创建\n\n```JS\nlet s3 = Symbol(\"光锥\");\n      let s4 = Symbol(\"光锥\");\n      console.log(s3, s4, s3 == s4);\n```\n\n3.不能与其他数据进行运算\n\n\n```JS\nlet result = s+1100l;\n      let result = s>1100l;\n      let result = s+s;\n```\n\n\n4.JS 基本数据类型\n\n\n```JS\n USONB  you are so niubility\n      u  undefined\n      s string symbol\n      o  object\n      n number null\n      b boolean\n```\n\n### 11.Symbol创建对象属性\n1.创建方式一\n\n```JS\n// 向对象中添加方法  up  down\n      let game = {\n        up() {\n          console.log(\"原up方法\");\n        },\n        down() {\n          console.log(\"原down方法\");\n        },\n        name: \"光锥\",\n      };\n\n    //   声明一个对象\n    let methods= {\n        up:Symbol(),\n        down:Symbol()\n    }\n    game[methods.up]=function(){\n        console.log('Symbol的up方法');\n    }\n    game[methods.down]=function(){\n        console.log('Symbol的down方法');\n    }\n    console.log(game);\n\n```\n2.创建方式二\n\n```JS\nlet youxi={\n        name:'奇葩',\n        [Symbol('say')]: function(){\n            console.log('Say');\n        },\n        [Symbol('see')]: function(){\n            console.log('see');\n        }\n    }\n    console.log(youxi);\n\n```\n### 12.Symbol内置属性\n1.hasInstance 和 isConcatSpreadable 的认识\n\n```JS\nclass Person{\n        static [Symbol.hasInstance](param){\n          console.log(param)\n          console.log('类型检测');\n          return false;\n        }\n      }\n      let o={};\n      console.log(o instanceof Person);\n\n      const arr=[1,2,3];\n      const arr2=[4,5,6];\n      arr2[Symbol.isConcatSpreadable]=false;//可用于数组内的数组是否展开\n      console.log(arr.concat(arr2));\n```\n2.更多Symbol参数认识\n[Symbol - JavaScript | MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n\n\nhexo init \"鱼有个梦想的个人博客\" # 目录名称不含空格的时候双引号可以省略\nhexo : 无法加载文件 C:\\Users\\26524\\AppData\\Roaming\\npm\\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https\n:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ hexo init \"鱼有个梦想的个人博客\" # 目录名称不含空格的时候双引号可以省略\n![[Pasted image 20230618162528.png]]","source":"_posts/ES6-ES11笔记.md","raw":"---\n\ntitle: ES6-ES11笔记\ndate: 2023-07-04 17:25\nupdated: 2023-07-04 17:25\ntags: JS ES6\ncategories: JS \nkeywords: ES6\ndescription: ES6 学习笔记\ncover: \n\n---\n\n### 1.let\n1、变量不能重<font color=\"#2DC26B\">复声明  </font>\n\n2、块级<font color=\"#2DC26B\">作用域  </font>\n\n3、<font color=\"#2DC26B\">不存在变量提升</font>  \n\n4、不影响作用域链\n\n![[1_let_学习.html]]\n### 2.const\n1、一定要赋初始值\n2、一般常量使用大写\n3、常量的值不能修改\n4、块级作用域\n5、对于数组和对象的元素修改，不算做对常量的修改\n\n![[2_const_学习.html]]\n### 3.变量的解构赋值\n1、数组的解构赋值\n\n```js\n const cA=['a','b','c'];\n      let [d,f,z]=A;\n      console.log(d);\n      console.log(f);\n      console.log(z);\n```\n\n2、对象的解构赋值\n```js\n   const a = {\n          name: \"zhangsan\",\n          age: 66,\n          xxx: function () {\n            console.log(\"55656\");\n          },\n        };\n        let {name,age,xxx}=a;\n        console.log(name);\n        console.log(age);\n        console.log(xxx);\n        xxx();\n```\n\n![[3_变量的解构赋值.html]]\n### 4.模板字符串\n1、声明\n```JS\nlet str = `我是模版字符串`;\nconsole.log(str,typeof str);\n```\n2、内容中可以直接出现换行符\n```JS\nlet str = `\n        <ul>\n            <li>111<li>\n            <li>222<li>\n            <li>333<li>    \n        <ul>\n        `;\n```\n3、变量的拼接\n```JS\nlet lovt = \"aaa\";\nlet out = `${lovt} 666666666666666`;\nconsole.log(out);\n```\n\n![[4_模版字符串.html]]\n### 5.简化对象写法\n```JS\nlet name ='光锥';\n        let chang = function() {\n            console.log('光锥之内皆是命运');\n        }\n\n        const school ={\n            name,\n            chang,\n            impove(){\n                console.log('超越光锥才能超越命运');\n            }\n        }\n```\n\n![[5_简化对象写法.html]]\n### 6.箭头函数\n1.this 是静态的  this 始终指向函数声明是所在的作用域下的this的值\n2.不能作为构造实例化对象\n3.不能使用 arguments 变量\n4.箭头函数的简写\n1) 省略小括号，当形参有且只有一个的时候\n2) 省略花括号，当代码体只有一条语句的时候，此时 return 必须省略 而且语句执行结果就是函数的返回值\n![[6_箭头函数.html]]\n5.练习\n![[7_箭头函数的案例.html]]\n\n### 7.参数默认值\n1.形参初始值 具有默认值的参数，一般位置要靠后(潜规则)\n\n\n``` JS\n      function add(a, b, c = 123) {\n        return a + b + c;\n      }\n      console.log(add(1, 2));\n\n```\n  2.与解构赋值结合\n\n```JS\nfunction connrct({host='127.0.0.1',username,password,port}){\n        console.log(host);\n        console.log(username);\n        console.log(password);\n        console.log(port);\n    }\n    connrct({\n        // host:\"百度.com\",\n        username:\"root\",\n        password:\"root\",\n        port:8080\n    });\n```\n\n### 8.rest参数\n1.ES5 获取实参的方式    对象形式\n\n```JS\n function date(){\n            console.log(arguments);\n        }\n        date('a','b','c','d');\n```\n![[Pasted image 20230611231727.png]]\n\n2.rest 参数必须要放到参数最后\n\n```JS\nfunction fn(a,b,...args){\n            console.log(a);\n            console.log(b);\n            console.log(args);\n        }\n        fn(1,2,3,45,6,69,6,88);\n```\n![[Pasted image 20230611231830.png]]\n\n### 9.扩展运算符的认识和应用\n1.认识 扩展运算符     ES6 【...】 扩展运算符 能将【数组】转换为逗号分隔的【参数序列】\n\n```JS\n// 声明一个数组\n      const arr = [\"A\", \"C\", \"B\"]; //【数组】\n      // => 'A','C','B'   【参数序列】\n\n      // 声明一个函数\n      function chang() {\n        console.log(arguments);\n      }\n      chang(...arr); //chang('A','C','B')   【参数序列】\n      chang(arr);\n```\n2.扩展运算符的应用\n 1).数组的合并\n \n```JS\n const AArr = [\"A\", \"C\", \"B\"];\n      const BArr = [\"D\", \"E\", \"F\"];\n      const CArr = AArr.concat(AArr);\n      console.log(CArr);\n      const DArr = [...AArr, ...BArr];\n      console.log(DArr);\n```\n2).数组的克隆   浅克隆\n\n```JS\nconst KArr = [\"H\", \"Y\", \"Z\"];\n      const YArr = [...KArr];\n      console.log(YArr);\n```\n\n3).将伪类数组转换为真正的数组\n\n```JS\n    <div></div>\n    <div></div>\n    <div></div>\n\nconst divs=document.querySelectorAll('div');\n      console.log(divs);\n      const divArr = [...divs];\n      console.log(divArr);\n```\n\n\n\n### 10.Symbol的认识与创建\n1.创建Symobl\n\n```JS\n      let s = Symbol();\n      console.log(s);\n      let s1 = Symbol(\"光锥\");\n      let s2 = Symbol(\"光锥\");\n      console.log(s1, s2, s1 == s4);\n```\n\n2  Symbol.for 创建\n\n```JS\nlet s3 = Symbol(\"光锥\");\n      let s4 = Symbol(\"光锥\");\n      console.log(s3, s4, s3 == s4);\n```\n\n3.不能与其他数据进行运算\n\n\n```JS\nlet result = s+1100l;\n      let result = s>1100l;\n      let result = s+s;\n```\n\n\n4.JS 基本数据类型\n\n\n```JS\n USONB  you are so niubility\n      u  undefined\n      s string symbol\n      o  object\n      n number null\n      b boolean\n```\n\n### 11.Symbol创建对象属性\n1.创建方式一\n\n```JS\n// 向对象中添加方法  up  down\n      let game = {\n        up() {\n          console.log(\"原up方法\");\n        },\n        down() {\n          console.log(\"原down方法\");\n        },\n        name: \"光锥\",\n      };\n\n    //   声明一个对象\n    let methods= {\n        up:Symbol(),\n        down:Symbol()\n    }\n    game[methods.up]=function(){\n        console.log('Symbol的up方法');\n    }\n    game[methods.down]=function(){\n        console.log('Symbol的down方法');\n    }\n    console.log(game);\n\n```\n2.创建方式二\n\n```JS\nlet youxi={\n        name:'奇葩',\n        [Symbol('say')]: function(){\n            console.log('Say');\n        },\n        [Symbol('see')]: function(){\n            console.log('see');\n        }\n    }\n    console.log(youxi);\n\n```\n### 12.Symbol内置属性\n1.hasInstance 和 isConcatSpreadable 的认识\n\n```JS\nclass Person{\n        static [Symbol.hasInstance](param){\n          console.log(param)\n          console.log('类型检测');\n          return false;\n        }\n      }\n      let o={};\n      console.log(o instanceof Person);\n\n      const arr=[1,2,3];\n      const arr2=[4,5,6];\n      arr2[Symbol.isConcatSpreadable]=false;//可用于数组内的数组是否展开\n      console.log(arr.concat(arr2));\n```\n2.更多Symbol参数认识\n[Symbol - JavaScript | MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n\n\nhexo init \"鱼有个梦想的个人博客\" # 目录名称不含空格的时候双引号可以省略\nhexo : 无法加载文件 C:\\Users\\26524\\AppData\\Roaming\\npm\\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https\n:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ hexo init \"鱼有个梦想的个人博客\" # 目录名称不含空格的时候双引号可以省略\n![[Pasted image 20230618162528.png]]","slug":"ES6-ES11笔记","published":1,"_id":"clj8frvod0001ioi07qm54pg6","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-let\"><a href=\"#1-let\" class=\"headerlink\" title=\"1.let\"></a>1.let</h3><p>1、变量不能重<font color=\"#2DC26B\">复声明  </font></p>\n<p>2、块级<font color=\"#2DC26B\">作用域  </font></p>\n<p>3、<font color=\"#2DC26B\">不存在变量提升</font>  </p>\n<p>4、不影响作用域链</p>\n<p>![[1_let_学习.html]]</p>\n<h3 id=\"2-const\"><a href=\"#2-const\" class=\"headerlink\" title=\"2.const\"></a>2.const</h3><p>1、一定要赋初始值<br>2、一般常量使用大写<br>3、常量的值不能修改<br>4、块级作用域<br>5、对于数组和对象的元素修改，不算做对常量的修改</p>\n<p>![[2_const_学习.html]]</p>\n<h3 id=\"3-变量的解构赋值\"><a href=\"#3-变量的解构赋值\" class=\"headerlink\" title=\"3.变量的解构赋值\"></a>3.变量的解构赋值</h3><p>1、数组的解构赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cA=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">let</span> [d,f,z]=A;</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(f);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(z);</span><br></pre></td></tr></table></figure>\n\n<p>2、对象的解构赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">const</span> a = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;zhangsan&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">age</span>: <span class=\"number\">66</span>,</span><br><span class=\"line\">          <span class=\"attr\">xxx</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;55656&quot;</span>);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> &#123;name,age,xxx&#125;=a;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xxx);</span><br><span class=\"line\">        <span class=\"title function_\">xxx</span>();</span><br></pre></td></tr></table></figure>\n\n<p>![[3_变量的解构赋值.html]]</p>\n<h3 id=\"4-模板字符串\"><a href=\"#4-模板字符串\" class=\"headerlink\" title=\"4.模板字符串\"></a>4.模板字符串</h3><p>1、声明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`我是模版字符串`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str,<span class=\"keyword\">typeof</span> str);</span><br></pre></td></tr></table></figure>\n<p>2、内容中可以直接出现换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;111&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;222&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;333&lt;li&gt;    </span></span><br><span class=\"line\"><span class=\"string\">        &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>;</span><br></pre></td></tr></table></figure>\n<p>3、变量的拼接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> lovt = <span class=\"string\">&quot;aaa&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> out = <span class=\"string\">`<span class=\"subst\">$&#123;lovt&#125;</span> 666666666666666`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(out);</span><br></pre></td></tr></table></figure>\n\n<p>![[4_模版字符串.html]]</p>\n<h3 id=\"5-简化对象写法\"><a href=\"#5-简化对象写法\" class=\"headerlink\" title=\"5.简化对象写法\"></a>5.简化对象写法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name =<span class=\"string\">&#x27;光锥&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> chang = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;光锥之内皆是命运&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> school =&#123;</span><br><span class=\"line\">            name,</span><br><span class=\"line\">            chang,</span><br><span class=\"line\">            <span class=\"title function_\">impove</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;超越光锥才能超越命运&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>![[5_简化对象写法.html]]</p>\n<h3 id=\"6-箭头函数\"><a href=\"#6-箭头函数\" class=\"headerlink\" title=\"6.箭头函数\"></a>6.箭头函数</h3><p>1.this 是静态的  this 始终指向函数声明是所在的作用域下的this的值<br>2.不能作为构造实例化对象<br>3.不能使用 arguments 变量<br>4.箭头函数的简写</p>\n<ol>\n<li>省略小括号，当形参有且只有一个的时候</li>\n<li>省略花括号，当代码体只有一条语句的时候，此时 return 必须省略 而且语句执行结果就是函数的返回值<br>![[6_箭头函数.html]]<br>5.练习<br>![[7_箭头函数的案例.html]]</li>\n</ol>\n<h3 id=\"7-参数默认值\"><a href=\"#7-参数默认值\" class=\"headerlink\" title=\"7.参数默认值\"></a>7.参数默认值</h3><p>1.形参初始值 具有默认值的参数，一般位置要靠后(潜规则)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b, c = <span class=\"number\">123</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b + c;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">add</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>  2.与解构赋值结合</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">connrct</span>(<span class=\"params\">&#123;host=<span class=\"string\">&#x27;127.0.0.1&#x27;</span>,username,password,port&#125;</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(host);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(username);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(password);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(port);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">connrct</span>(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// host:&quot;百度.com&quot;,</span></span><br><span class=\"line\">        <span class=\"attr\">username</span>:<span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>:<span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">port</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-rest参数\"><a href=\"#8-rest参数\" class=\"headerlink\" title=\"8.rest参数\"></a>8.rest参数</h3><p>1.ES5 获取实参的方式    对象形式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">date</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"title function_\">date</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230611231727.png]]</p>\n<p>2.rest 参数必须要放到参数最后</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a,b,...args</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">fn</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">45</span>,<span class=\"number\">6</span>,<span class=\"number\">69</span>,<span class=\"number\">6</span>,<span class=\"number\">88</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230611231830.png]]</p>\n<h3 id=\"9-扩展运算符的认识和应用\"><a href=\"#9-扩展运算符的认识和应用\" class=\"headerlink\" title=\"9.扩展运算符的认识和应用\"></a>9.扩展运算符的认识和应用</h3><p>1.认识 扩展运算符     ES6 【…】 扩展运算符 能将【数组】转换为逗号分隔的【参数序列】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个数组</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;B&quot;</span>]; <span class=\"comment\">//【数组】</span></span><br><span class=\"line\">      <span class=\"comment\">// =&gt; &#x27;A&#x27;,&#x27;C&#x27;,&#x27;B&#x27;   【参数序列】</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 声明一个函数</span></span><br><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">chang</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"title function_\">chang</span>(...arr); <span class=\"comment\">//chang(&#x27;A&#x27;,&#x27;C&#x27;,&#x27;B&#x27;)   【参数序列】</span></span><br><span class=\"line\">      <span class=\"title function_\">chang</span>(arr);</span><br></pre></td></tr></table></figure>\n<p>2.扩展运算符的应用<br> 1).数组的合并\n </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">AArr</span> = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;B&quot;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">BArr</span> = [<span class=\"string\">&quot;D&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;F&quot;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">CArr</span> = <span class=\"title class_\">AArr</span>.<span class=\"title function_\">concat</span>(<span class=\"title class_\">AArr</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">CArr</span>);</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">DArr</span> = [...<span class=\"title class_\">AArr</span>, ...<span class=\"title class_\">BArr</span>];</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">DArr</span>);</span><br></pre></td></tr></table></figure>\n<p>2).数组的克隆   浅克隆</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">KArr</span> = [<span class=\"string\">&quot;H&quot;</span>, <span class=\"string\">&quot;Y&quot;</span>, <span class=\"string\">&quot;Z&quot;</span>];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> <span class=\"title class_\">YArr</span> = [...<span class=\"title class_\">KArr</span>];</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">YArr</span>);</span><br></pre></td></tr></table></figure>\n\n<p>3).将伪类数组转换为真正的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> divs=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(divs);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> divArr = [...divs];</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(divArr);</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"10-Symbol的认识与创建\"><a href=\"#10-Symbol的认识与创建\" class=\"headerlink\" title=\"10.Symbol的认识与创建\"></a>10.Symbol的认识与创建</h3><p>1.创建Symobl</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s1, s2, s1 == s4);</span><br></pre></td></tr></table></figure>\n\n<p>2  Symbol.for 创建</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s3 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> s4 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s3, s4, s3 == s4);</span><br></pre></td></tr></table></figure>\n\n<p>3.不能与其他数据进行运算</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> result = s+1100l;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = s&gt;1100l;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = s+s;</span><br></pre></td></tr></table></figure>\n\n\n<p>4.JS 基本数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">USONB</span>  you are so niubility</span><br><span class=\"line\">     u  <span class=\"literal\">undefined</span></span><br><span class=\"line\">     s string symbol</span><br><span class=\"line\">     o  object</span><br><span class=\"line\">     n number <span class=\"literal\">null</span></span><br><span class=\"line\">     b boolean</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-Symbol创建对象属性\"><a href=\"#11-Symbol创建对象属性\" class=\"headerlink\" title=\"11.Symbol创建对象属性\"></a>11.Symbol创建对象属性</h3><p>1.创建方式一</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向对象中添加方法  up  down</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> game = &#123;</span><br><span class=\"line\">        <span class=\"title function_\">up</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;原up方法&quot;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">down</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;原down方法&quot;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;光锥&quot;</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//   声明一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> methods= &#123;</span><br><span class=\"line\">        <span class=\"attr\">up</span>:<span class=\"title class_\">Symbol</span>(),</span><br><span class=\"line\">        <span class=\"attr\">down</span>:<span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    game[methods.<span class=\"property\">up</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Symbol的up方法&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    game[methods.<span class=\"property\">down</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Symbol的down方法&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(game);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2.创建方式二</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> youxi=&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;奇葩&#x27;</span>,</span><br><span class=\"line\">        [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;say&#x27;</span>)]: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Say&#x27;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;see&#x27;</span>)]: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;see&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(youxi);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-Symbol内置属性\"><a href=\"#12-Symbol内置属性\" class=\"headerlink\" title=\"12.Symbol内置属性\"></a>12.Symbol内置属性</h3><p>1.hasInstance 和 isConcatSpreadable 的认识</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> [<span class=\"title class_\">Symbol</span>.<span class=\"property\">hasInstance</span>](param)&#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(param)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;类型检测&#x27;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> o=&#123;&#125;;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr2=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">      arr2[<span class=\"title class_\">Symbol</span>.<span class=\"property\">isConcatSpreadable</span>]=<span class=\"literal\">false</span>;<span class=\"comment\">//可用于数组内的数组是否展开</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">concat</span>(arr2));</span><br></pre></td></tr></table></figure>\n<p>2.更多Symbol参数认识<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol - JavaScript | MDN</a></p>\n<p>hexo init “鱼有个梦想的个人博客” # 目录名称不含空格的时候双引号可以省略<br>hexo : 无法加载文件 C:\\Users\\26524\\AppData\\Roaming\\npm\\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https<br>:&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。<br>所在位置 行:1 字符: 1</p>\n<ul>\n<li>hexo init “鱼有个梦想的个人博客” # 目录名称不含空格的时候双引号可以省略<br>![[Pasted image 20230618162528.png]]</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-let\"><a href=\"#1-let\" class=\"headerlink\" title=\"1.let\"></a>1.let</h3><p>1、变量不能重<font color=\"#2DC26B\">复声明  </font></p>\n<p>2、块级<font color=\"#2DC26B\">作用域  </font></p>\n<p>3、<font color=\"#2DC26B\">不存在变量提升</font>  </p>\n<p>4、不影响作用域链</p>\n<p>![[1_let_学习.html]]</p>\n<h3 id=\"2-const\"><a href=\"#2-const\" class=\"headerlink\" title=\"2.const\"></a>2.const</h3><p>1、一定要赋初始值<br>2、一般常量使用大写<br>3、常量的值不能修改<br>4、块级作用域<br>5、对于数组和对象的元素修改，不算做对常量的修改</p>\n<p>![[2_const_学习.html]]</p>\n<h3 id=\"3-变量的解构赋值\"><a href=\"#3-变量的解构赋值\" class=\"headerlink\" title=\"3.变量的解构赋值\"></a>3.变量的解构赋值</h3><p>1、数组的解构赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cA=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">let</span> [d,f,z]=A;</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(f);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(z);</span><br></pre></td></tr></table></figure>\n\n<p>2、对象的解构赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">const</span> a = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;zhangsan&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">age</span>: <span class=\"number\">66</span>,</span><br><span class=\"line\">          <span class=\"attr\">xxx</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;55656&quot;</span>);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> &#123;name,age,xxx&#125;=a;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xxx);</span><br><span class=\"line\">        <span class=\"title function_\">xxx</span>();</span><br></pre></td></tr></table></figure>\n\n<p>![[3_变量的解构赋值.html]]</p>\n<h3 id=\"4-模板字符串\"><a href=\"#4-模板字符串\" class=\"headerlink\" title=\"4.模板字符串\"></a>4.模板字符串</h3><p>1、声明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`我是模版字符串`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str,<span class=\"keyword\">typeof</span> str);</span><br></pre></td></tr></table></figure>\n<p>2、内容中可以直接出现换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;111&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;222&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;li&gt;333&lt;li&gt;    </span></span><br><span class=\"line\"><span class=\"string\">        &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>;</span><br></pre></td></tr></table></figure>\n<p>3、变量的拼接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> lovt = <span class=\"string\">&quot;aaa&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> out = <span class=\"string\">`<span class=\"subst\">$&#123;lovt&#125;</span> 666666666666666`</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(out);</span><br></pre></td></tr></table></figure>\n\n<p>![[4_模版字符串.html]]</p>\n<h3 id=\"5-简化对象写法\"><a href=\"#5-简化对象写法\" class=\"headerlink\" title=\"5.简化对象写法\"></a>5.简化对象写法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name =<span class=\"string\">&#x27;光锥&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> chang = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;光锥之内皆是命运&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> school =&#123;</span><br><span class=\"line\">            name,</span><br><span class=\"line\">            chang,</span><br><span class=\"line\">            <span class=\"title function_\">impove</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;超越光锥才能超越命运&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>![[5_简化对象写法.html]]</p>\n<h3 id=\"6-箭头函数\"><a href=\"#6-箭头函数\" class=\"headerlink\" title=\"6.箭头函数\"></a>6.箭头函数</h3><p>1.this 是静态的  this 始终指向函数声明是所在的作用域下的this的值<br>2.不能作为构造实例化对象<br>3.不能使用 arguments 变量<br>4.箭头函数的简写</p>\n<ol>\n<li>省略小括号，当形参有且只有一个的时候</li>\n<li>省略花括号，当代码体只有一条语句的时候，此时 return 必须省略 而且语句执行结果就是函数的返回值<br>![[6_箭头函数.html]]<br>5.练习<br>![[7_箭头函数的案例.html]]</li>\n</ol>\n<h3 id=\"7-参数默认值\"><a href=\"#7-参数默认值\" class=\"headerlink\" title=\"7.参数默认值\"></a>7.参数默认值</h3><p>1.形参初始值 具有默认值的参数，一般位置要靠后(潜规则)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">a, b, c = <span class=\"number\">123</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b + c;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">add</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>  2.与解构赋值结合</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">connrct</span>(<span class=\"params\">&#123;host=<span class=\"string\">&#x27;127.0.0.1&#x27;</span>,username,password,port&#125;</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(host);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(username);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(password);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(port);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">connrct</span>(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// host:&quot;百度.com&quot;,</span></span><br><span class=\"line\">        <span class=\"attr\">username</span>:<span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">password</span>:<span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">port</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-rest参数\"><a href=\"#8-rest参数\" class=\"headerlink\" title=\"8.rest参数\"></a>8.rest参数</h3><p>1.ES5 获取实参的方式    对象形式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">date</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"title function_\">date</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230611231727.png]]</p>\n<p>2.rest 参数必须要放到参数最后</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\">a,b,...args</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">fn</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">45</span>,<span class=\"number\">6</span>,<span class=\"number\">69</span>,<span class=\"number\">6</span>,<span class=\"number\">88</span>);</span><br></pre></td></tr></table></figure>\n<p>![[Pasted image 20230611231830.png]]</p>\n<h3 id=\"9-扩展运算符的认识和应用\"><a href=\"#9-扩展运算符的认识和应用\" class=\"headerlink\" title=\"9.扩展运算符的认识和应用\"></a>9.扩展运算符的认识和应用</h3><p>1.认识 扩展运算符     ES6 【…】 扩展运算符 能将【数组】转换为逗号分隔的【参数序列】</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明一个数组</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;B&quot;</span>]; <span class=\"comment\">//【数组】</span></span><br><span class=\"line\">      <span class=\"comment\">// =&gt; &#x27;A&#x27;,&#x27;C&#x27;,&#x27;B&#x27;   【参数序列】</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 声明一个函数</span></span><br><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">chang</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">arguments</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"title function_\">chang</span>(...arr); <span class=\"comment\">//chang(&#x27;A&#x27;,&#x27;C&#x27;,&#x27;B&#x27;)   【参数序列】</span></span><br><span class=\"line\">      <span class=\"title function_\">chang</span>(arr);</span><br></pre></td></tr></table></figure>\n<p>2.扩展运算符的应用<br> 1).数组的合并\n </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">AArr</span> = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;B&quot;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">BArr</span> = [<span class=\"string\">&quot;D&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;F&quot;</span>];</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">CArr</span> = <span class=\"title class_\">AArr</span>.<span class=\"title function_\">concat</span>(<span class=\"title class_\">AArr</span>);</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">CArr</span>);</span><br><span class=\"line\">     <span class=\"keyword\">const</span> <span class=\"title class_\">DArr</span> = [...<span class=\"title class_\">AArr</span>, ...<span class=\"title class_\">BArr</span>];</span><br><span class=\"line\">     <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">DArr</span>);</span><br></pre></td></tr></table></figure>\n<p>2).数组的克隆   浅克隆</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">KArr</span> = [<span class=\"string\">&quot;H&quot;</span>, <span class=\"string\">&quot;Y&quot;</span>, <span class=\"string\">&quot;Z&quot;</span>];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> <span class=\"title class_\">YArr</span> = [...<span class=\"title class_\">KArr</span>];</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">YArr</span>);</span><br></pre></td></tr></table></figure>\n\n<p>3).将伪类数组转换为真正的数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> divs=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(divs);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> divArr = [...divs];</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(divArr);</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"10-Symbol的认识与创建\"><a href=\"#10-Symbol的认识与创建\" class=\"headerlink\" title=\"10.Symbol的认识与创建\"></a>10.Symbol的认识与创建</h3><p>1.创建Symobl</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"title class_\">Symbol</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s1, s2, s1 == s4);</span><br></pre></td></tr></table></figure>\n\n<p>2  Symbol.for 创建</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s3 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> s4 = <span class=\"title class_\">Symbol</span>(<span class=\"string\">&quot;光锥&quot;</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s3, s4, s3 == s4);</span><br></pre></td></tr></table></figure>\n\n<p>3.不能与其他数据进行运算</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> result = s+1100l;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = s&gt;1100l;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result = s+s;</span><br></pre></td></tr></table></figure>\n\n\n<p>4.JS 基本数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">USONB</span>  you are so niubility</span><br><span class=\"line\">     u  <span class=\"literal\">undefined</span></span><br><span class=\"line\">     s string symbol</span><br><span class=\"line\">     o  object</span><br><span class=\"line\">     n number <span class=\"literal\">null</span></span><br><span class=\"line\">     b boolean</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-Symbol创建对象属性\"><a href=\"#11-Symbol创建对象属性\" class=\"headerlink\" title=\"11.Symbol创建对象属性\"></a>11.Symbol创建对象属性</h3><p>1.创建方式一</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 向对象中添加方法  up  down</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> game = &#123;</span><br><span class=\"line\">        <span class=\"title function_\">up</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;原up方法&quot;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"title function_\">down</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;原down方法&quot;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;光锥&quot;</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//   声明一个对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> methods= &#123;</span><br><span class=\"line\">        <span class=\"attr\">up</span>:<span class=\"title class_\">Symbol</span>(),</span><br><span class=\"line\">        <span class=\"attr\">down</span>:<span class=\"title class_\">Symbol</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    game[methods.<span class=\"property\">up</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Symbol的up方法&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    game[methods.<span class=\"property\">down</span>]=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Symbol的down方法&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(game);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2.创建方式二</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> youxi=&#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>:<span class=\"string\">&#x27;奇葩&#x27;</span>,</span><br><span class=\"line\">        [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;say&#x27;</span>)]: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Say&#x27;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        [<span class=\"title class_\">Symbol</span>(<span class=\"string\">&#x27;see&#x27;</span>)]: <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;see&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(youxi);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-Symbol内置属性\"><a href=\"#12-Symbol内置属性\" class=\"headerlink\" title=\"12.Symbol内置属性\"></a>12.Symbol内置属性</h3><p>1.hasInstance 和 isConcatSpreadable 的认识</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> [<span class=\"title class_\">Symbol</span>.<span class=\"property\">hasInstance</span>](param)&#123;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(param)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;类型检测&#x27;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> o=&#123;&#125;;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(o <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Person</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">      <span class=\"keyword\">const</span> arr2=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\">      arr2[<span class=\"title class_\">Symbol</span>.<span class=\"property\">isConcatSpreadable</span>]=<span class=\"literal\">false</span>;<span class=\"comment\">//可用于数组内的数组是否展开</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">concat</span>(arr2));</span><br></pre></td></tr></table></figure>\n<p>2.更多Symbol参数认识<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol - JavaScript | MDN</a></p>\n<p>hexo init “鱼有个梦想的个人博客” # 目录名称不含空格的时候双引号可以省略<br>hexo : 无法加载文件 C:\\Users\\26524\\AppData\\Roaming\\npm\\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https<br>:&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkID&#x3D;135170 中的 about_Execution_Policies。<br>所在位置 行:1 字符: 1</p>\n<ul>\n<li>hexo init “鱼有个梦想的个人博客” # 目录名称不含空格的时候双引号可以省略<br>![[Pasted image 20230618162528.png]]</li>\n</ul>\n"},{"title":"常用","date":"2023-07-04T14:07:00.000Z","updated":"2023-07-04T14:07:00.000Z","keywords":"GitHub","description":"比较常用的知识点","_content":"\n### 1.git\n1.添加子模块\ngit submodule add https://github.com/YuLong-cmd/hexo-theme-butterfly.git   butterfly\n1. 新增子模块\n向一个项目中添加子模块\n\n```git\ngit submodule add https://github.com/yyy/xxx.git\n```\n\n之后会 clone 该子模块对应的远程项目文件到本地父项目目录下的同名文件夹中（./xxx/），父项目下也会多一个叫 .gitmodules 的文件，内容大致为：\n```git\n[submodule \"xxx\"]\n\tpath = xxx\n\turl = git@github.com:yyy/xxx.git\n```\n如果存在多个子模块，则会继续向该文件中追加与上面相同格式的内容；\n\n同时父项目下的 .git 目录中也会新增 /modules/xxx/ 目录，里面的内容对应子模块仓库中原有的 .git 目录中的文件，此时虽然子模块目录下的 .git 依然存在，但是已经由一个文件夹变成了文件，内容为：\n```git\ngitdir: ../.git/modules/xxx\n```\n即指向了父项目的 .git/modules/xxx 目录；如果运行 git config --list 查看项目的配置，也会发现多了类似下面两行的内容：\n```git\nsubmodule.xxx.url=git@github.com:yyy/xxx.git\nsubmodule.xxx.active=true\n```\n如果修改 submodule.xxx.url 的值，则会覆盖 .gitmodules 文件中对应的 url 值；","source":"_posts/常用.md","raw":"---\n\ntitle: 常用\ndate: 2023-07-04 22:07\nupdated: 2023-07-04 22:07\ntags:  GitHub\ncategories:  GitHub\nkeywords: GitHub\ndescription:  比较常用的知识点\n\n---\n\n### 1.git\n1.添加子模块\ngit submodule add https://github.com/YuLong-cmd/hexo-theme-butterfly.git   butterfly\n1. 新增子模块\n向一个项目中添加子模块\n\n```git\ngit submodule add https://github.com/yyy/xxx.git\n```\n\n之后会 clone 该子模块对应的远程项目文件到本地父项目目录下的同名文件夹中（./xxx/），父项目下也会多一个叫 .gitmodules 的文件，内容大致为：\n```git\n[submodule \"xxx\"]\n\tpath = xxx\n\turl = git@github.com:yyy/xxx.git\n```\n如果存在多个子模块，则会继续向该文件中追加与上面相同格式的内容；\n\n同时父项目下的 .git 目录中也会新增 /modules/xxx/ 目录，里面的内容对应子模块仓库中原有的 .git 目录中的文件，此时虽然子模块目录下的 .git 依然存在，但是已经由一个文件夹变成了文件，内容为：\n```git\ngitdir: ../.git/modules/xxx\n```\n即指向了父项目的 .git/modules/xxx 目录；如果运行 git config --list 查看项目的配置，也会发现多了类似下面两行的内容：\n```git\nsubmodule.xxx.url=git@github.com:yyy/xxx.git\nsubmodule.xxx.active=true\n```\n如果修改 submodule.xxx.url 的值，则会覆盖 .gitmodules 文件中对应的 url 值；","slug":"常用","published":1,"_id":"clj8nwwuo000060i0drzs9hdg","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-git\"><a href=\"#1-git\" class=\"headerlink\" title=\"1.git\"></a>1.git</h3><p>1.添加子模块<br>git submodule add <a href=\"https://github.com/YuLong-cmd/hexo-theme-butterfly.git\">https://github.com/YuLong-cmd/hexo-theme-butterfly.git</a>   butterfly</p>\n<ol>\n<li>新增子模块<br>向一个项目中添加子模块</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule add https://github.com/yyy/xxx.git</span><br></pre></td></tr></table></figure>\n\n<p>之后会 clone 该子模块对应的远程项目文件到本地父项目目录下的同名文件夹中（.&#x2F;xxx&#x2F;），父项目下也会多一个叫 .gitmodules 的文件，内容大致为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[submodule &quot;xxx&quot;]</span><br><span class=\"line\">\tpath = xxx</span><br><span class=\"line\">\turl = git@github.com:yyy/xxx.git</span><br></pre></td></tr></table></figure>\n<p>如果存在多个子模块，则会继续向该文件中追加与上面相同格式的内容；</p>\n<p>同时父项目下的 .git 目录中也会新增 &#x2F;modules&#x2F;xxx&#x2F; 目录，里面的内容对应子模块仓库中原有的 .git 目录中的文件，此时虽然子模块目录下的 .git 依然存在，但是已经由一个文件夹变成了文件，内容为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitdir: ../.git/modules/xxx</span><br></pre></td></tr></table></figure>\n<p>即指向了父项目的 .git&#x2F;modules&#x2F;xxx 目录；如果运行 git config –list 查看项目的配置，也会发现多了类似下面两行的内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">submodule.xxx.url=git@github.com:yyy/xxx.git</span><br><span class=\"line\">submodule.xxx.active=true</span><br></pre></td></tr></table></figure>\n<p>如果修改 submodule.xxx.url 的值，则会覆盖 .gitmodules 文件中对应的 url 值；</p>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<h3 id=\"1-git\"><a href=\"#1-git\" class=\"headerlink\" title=\"1.git\"></a>1.git</h3><p>1.添加子模块<br>git submodule add <a href=\"https://github.com/YuLong-cmd/hexo-theme-butterfly.git\">https://github.com/YuLong-cmd/hexo-theme-butterfly.git</a>   butterfly</p>\n<ol>\n<li>新增子模块<br>向一个项目中添加子模块</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule add https://github.com/yyy/xxx.git</span><br></pre></td></tr></table></figure>\n\n<p>之后会 clone 该子模块对应的远程项目文件到本地父项目目录下的同名文件夹中（.&#x2F;xxx&#x2F;），父项目下也会多一个叫 .gitmodules 的文件，内容大致为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[submodule &quot;xxx&quot;]</span><br><span class=\"line\">\tpath = xxx</span><br><span class=\"line\">\turl = git@github.com:yyy/xxx.git</span><br></pre></td></tr></table></figure>\n<p>如果存在多个子模块，则会继续向该文件中追加与上面相同格式的内容；</p>\n<p>同时父项目下的 .git 目录中也会新增 &#x2F;modules&#x2F;xxx&#x2F; 目录，里面的内容对应子模块仓库中原有的 .git 目录中的文件，此时虽然子模块目录下的 .git 依然存在，但是已经由一个文件夹变成了文件，内容为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitdir: ../.git/modules/xxx</span><br></pre></td></tr></table></figure>\n<p>即指向了父项目的 .git&#x2F;modules&#x2F;xxx 目录；如果运行 git config –list 查看项目的配置，也会发现多了类似下面两行的内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">submodule.xxx.url=git@github.com:yyy/xxx.git</span><br><span class=\"line\">submodule.xxx.active=true</span><br></pre></td></tr></table></figure>\n<p>如果修改 submodule.xxx.url 的值，则会覆盖 .gitmodules 文件中对应的 url 值；</p>\n"},{"title":"图床","date":"2023-07-04T14:07:00.000Z","updated":"2023-07-04T14:07:00.000Z","keywords":"GitHub","description":"GitHub 图床的搭建","cover":"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/%E4%B8%8B%E8%BD%BD.jpg","_content":"\n### 1.下载PicGo PicGo\n下载地址: https://github.com/Molunerfinn/picgo/releases\n\n### 2.创建GitHub仓库\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOEIH.png)\n点自己头像，点Setting\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOx0S.png)\n\n再点Developer settings\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOzTg.jpg)\n\n再点Personal access tokens\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXpkQ.png)\n\n填写内容，记得勾选repo\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXCfs.png)\n \n复制生成的token,（再关闭网页这个token就没法复制了）\n\n### 配置PicGo\n\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/20230704220025.png)\n\n### 加速访问\n\n大家可能会发现，我们上传到 Github 的图片有时候访问太慢了，有时候甚至直接加载不出来！那该咋办呢？\n\n这时候我们就可以用 [jsDelivr](https://link.zhihu.com/?target=https%3A//www.jsdelivr.com/) 进行免费加速，而设置的方法也很简单，只需要在我们 PicGo 图床配置中添加如下自定义域名即可；\n\n> `https://cdn.jsdelivr.net/gh/用户名/仓库名`","source":"_posts/图床.md","raw":"---\n\ntitle: 图床\ndate: 2023-07-04 22:07\nupdated: 2023-07-04 22:07\ntags:  GitHub\ncategories:  GitHub\nkeywords: GitHub\ndescription:  GitHub 图床的搭建\ncover:  https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/%E4%B8%8B%E8%BD%BD.jpg\n\n---\n\n### 1.下载PicGo PicGo\n下载地址: https://github.com/Molunerfinn/picgo/releases\n\n### 2.创建GitHub仓库\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOEIH.png)\n点自己头像，点Setting\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOx0S.png)\n\n再点Developer settings\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOzTg.jpg)\n\n再点Personal access tokens\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXpkQ.png)\n\n填写内容，记得勾选repo\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXCfs.png)\n \n复制生成的token,（再关闭网页这个token就没法复制了）\n\n### 配置PicGo\n\n![](https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/20230704220025.png)\n\n### 加速访问\n\n大家可能会发现，我们上传到 Github 的图片有时候访问太慢了，有时候甚至直接加载不出来！那该咋办呢？\n\n这时候我们就可以用 [jsDelivr](https://link.zhihu.com/?target=https%3A//www.jsdelivr.com/) 进行免费加速，而设置的方法也很简单，只需要在我们 PicGo 图床配置中添加如下自定义域名即可；\n\n> `https://cdn.jsdelivr.net/gh/用户名/仓库名`","slug":"图床","published":1,"_id":"cljodg8kr0000pwi0gowj07cm","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-下载PicGo-PicGo\"><a href=\"#1-下载PicGo-PicGo\" class=\"headerlink\" title=\"1.下载PicGo PicGo\"></a>1.下载PicGo PicGo</h3><p>下载地址: <a href=\"https://github.com/Molunerfinn/picgo/releases\">https://github.com/Molunerfinn/picgo/releases</a></p>\n<h3 id=\"2-创建GitHub仓库\"><a href=\"#2-创建GitHub仓库\" class=\"headerlink\" title=\"2.创建GitHub仓库\"></a>2.创建GitHub仓库</h3><p><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOEIH.png\"><br>点自己头像，点Setting<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOx0S.png\"></p>\n<p>再点Developer settings<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOzTg.jpg\"></p>\n<p>再点Personal access tokens<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXpkQ.png\"></p>\n<p>填写内容，记得勾选repo<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXCfs.png\"></p>\n<p>复制生成的token,（再关闭网页这个token就没法复制了）</p>\n<h3 id=\"配置PicGo\"><a href=\"#配置PicGo\" class=\"headerlink\" title=\"配置PicGo\"></a>配置PicGo</h3><p><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/20230704220025.png\"></p>\n<h3 id=\"加速访问\"><a href=\"#加速访问\" class=\"headerlink\" title=\"加速访问\"></a>加速访问</h3><p>大家可能会发现，我们上传到 Github 的图片有时候访问太慢了，有时候甚至直接加载不出来！那该咋办呢？</p>\n<p>这时候我们就可以用 <a href=\"https://link.zhihu.com/?target=https://www.jsdelivr.com/\">jsDelivr</a> 进行免费加速，而设置的方法也很简单，只需要在我们 PicGo 图床配置中添加如下自定义域名即可；</p>\n<blockquote>\n<p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p>\n</blockquote>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h3 id=\"1-下载PicGo-PicGo\"><a href=\"#1-下载PicGo-PicGo\" class=\"headerlink\" title=\"1.下载PicGo PicGo\"></a>1.下载PicGo PicGo</h3><p>下载地址: <a href=\"https://github.com/Molunerfinn/picgo/releases\">https://github.com/Molunerfinn/picgo/releases</a></p>\n<h3 id=\"2-创建GitHub仓库\"><a href=\"#2-创建GitHub仓库\" class=\"headerlink\" title=\"2.创建GitHub仓库\"></a>2.创建GitHub仓库</h3><p><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOEIH.png\"><br>点自己头像，点Setting<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOx0S.png\"></p>\n<p>再点Developer settings<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nOzTg.jpg\"></p>\n<p>再点Personal access tokens<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXpkQ.png\"></p>\n<p>填写内容，记得勾选repo<br><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/8nXCfs.png\"></p>\n<p>复制生成的token,（再关闭网页这个token就没法复制了）</p>\n<h3 id=\"配置PicGo\"><a href=\"#配置PicGo\" class=\"headerlink\" title=\"配置PicGo\"></a>配置PicGo</h3><p><img src=\"https://cdn.jsdelivr.net/gh/YuLong-cmd/PicGo_Image/img/20230704220025.png\"></p>\n<h3 id=\"加速访问\"><a href=\"#加速访问\" class=\"headerlink\" title=\"加速访问\"></a>加速访问</h3><p>大家可能会发现，我们上传到 Github 的图片有时候访问太慢了，有时候甚至直接加载不出来！那该咋办呢？</p>\n<p>这时候我们就可以用 <a href=\"https://link.zhihu.com/?target=https://www.jsdelivr.com/\">jsDelivr</a> 进行免费加速，而设置的方法也很简单，只需要在我们 PicGo 图床配置中添加如下自定义域名即可；</p>\n<blockquote>\n<p><code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clj8frvod0001ioi07qm54pg6","category_id":"cljo4wl6600005wi051x72ota","_id":"cljo4wl6b00035wi0361zcjut"},{"post_id":"cljodg8kr0000pwi0gowj07cm","category_id":"cljodg8kt0001pwi0gv6qbfny","_id":"cljodg8ku0004pwi0dtvo5bor"},{"post_id":"clj8nwwuo000060i0drzs9hdg","category_id":"cljodg8kt0001pwi0gv6qbfny","_id":"cljrajs2k00026ki03uing2po"}],"PostTag":[{"post_id":"clj8frvod0001ioi07qm54pg6","tag_id":"cljo4wl6900015wi02ijb9tiu","_id":"cljo4wl6b00025wi05v939kk6"},{"post_id":"cljodg8kr0000pwi0gowj07cm","tag_id":"cljodg8ku0002pwi0a7cr6zhi","_id":"cljodg8ku0003pwi03llu7jt8"},{"post_id":"clj8nwwuo000060i0drzs9hdg","tag_id":"cljodg8ku0002pwi0a7cr6zhi","_id":"cljrajs2k00016ki0b4uz7zm2"}],"Tag":[{"name":"vue-router","_id":"cljo10o5o0002cki09q54e0w8"},{"name":"JS ES6","_id":"cljo4wl6900015wi02ijb9tiu"},{"name":"GitHub","_id":"cljodg8ku0002pwi0a7cr6zhi"}]}}